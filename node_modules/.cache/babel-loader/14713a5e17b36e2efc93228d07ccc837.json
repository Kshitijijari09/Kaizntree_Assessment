{"ast":null,"code":"var _jsxFileName = \"/Users/kshitijijari/Downloads/Kaizntree Front-End Take Home Challenge/src/components/InputSelect/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState, useRef } from \"react\";\nimport Downshift from \"downshift\";\nimport classNames from \"classnames\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function InputSelect(_ref) {\n  _s();\n\n  let {\n    label,\n    defaultValue,\n    onChange: consumerOnChange,\n    items,\n    parseItem,\n    isLoading,\n    loadingLabel\n  } = _ref;\n  const [selectedValue, setSelectedValue] = useState(defaultValue !== null && defaultValue !== void 0 ? defaultValue : null);\n  const [dropdownPosition, setDropdownPosition] = useState({\n    top: 0,\n    left: 0\n  });\n  const menuRef = useRef(null);\n  const onChange = useCallback(selectedItem => {\n    if (selectedItem === null) {\n      return;\n    }\n\n    consumerOnChange(selectedItem);\n    setSelectedValue(selectedItem);\n  }, [consumerOnChange]);\n\n  const calculateDropdownPosition = () => {\n    if (menuRef.current) {\n      const {\n        top,\n        bottom,\n        left\n      } = menuRef.current.getBoundingClientRect();\n      const {\n        innerHeight\n      } = window; // Check if menu is below the viewport\n\n      if (bottom > innerHeight) {\n        setDropdownPosition({\n          top: innerHeight - (bottom - top),\n          left\n        });\n      } else {\n        setDropdownPosition({\n          top,\n          left\n        });\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Downshift, {\n    id: \"KaizntreeSelect\",\n    onChange: onChange,\n    selectedItem: selectedValue,\n    itemToString: item => item ? parseItem(item).label : \"\",\n    children: _ref2 => {\n      let {\n        getItemProps,\n        getLabelProps,\n        getMenuProps,\n        isOpen,\n        highlightedIndex,\n        selectedItem,\n        getToggleButtonProps,\n        inputValue\n      } = _ref2;\n      const toggleProps = getToggleButtonProps();\n      const parsedSelectedItem = selectedItem === null ? null : parseItem(selectedItem);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"KaizntreeInputSelect--root\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"KaizntreeText--s KaizntreeText--hushed\",\n          ...getLabelProps(),\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"KaizntreeBreak--xs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"KaizntreeInputSelect--input\",\n          onClick: event => {\n            calculateDropdownPosition();\n            toggleProps.onClick(event);\n          },\n          children: inputValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: menuRef,\n          className: classNames(\"KaizntreeInputSelect--dropdown-container\", {\n            \"KaizntreeInputSelect--dropdown-container-opened\": isOpen\n          }),\n          ...getMenuProps(),\n          style: {\n            top: dropdownPosition.top,\n            left: dropdownPosition.left\n          },\n          children: renderItems()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this);\n\n      function renderItems() {\n        if (!isOpen) {\n          return null;\n        }\n\n        if (isLoading) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"KaizntreeInputSelect--dropdown-item\",\n            children: [loadingLabel, \"...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 20\n          }, this);\n        }\n\n        if (items.length === 0) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"KaizntreeInputSelect--dropdown-item\",\n            children: \"No items\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 20\n          }, this);\n        }\n\n        return items.map((item, index) => {\n          const parsedItem = parseItem(item);\n          return /*#__PURE__*/_jsxDEV(\"div\", { ...getItemProps({\n              key: parsedItem.value,\n              index,\n              item,\n              className: classNames(\"KaizntreeInputSelect--dropdown-item\", {\n                \"KaizntreeInputSelect--dropdown-item-highlighted\": highlightedIndex === index,\n                \"KaizntreeInputSelect--dropdown-item-selected\": (parsedSelectedItem === null || parsedSelectedItem === void 0 ? void 0 : parsedSelectedItem.value) === parsedItem.value\n              })\n            }),\n            children: parsedItem.label\n          }, parsedItem.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this);\n        });\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(InputSelect, \"3YwJtBQDQMvrTHfgx/GQtxUDxqw=\");\n\n_c = InputSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputSelect\");","map":{"version":3,"names":["React","useCallback","useState","useRef","Downshift","classNames","InputSelect","label","defaultValue","onChange","consumerOnChange","items","parseItem","isLoading","loadingLabel","selectedValue","setSelectedValue","dropdownPosition","setDropdownPosition","top","left","menuRef","selectedItem","calculateDropdownPosition","current","bottom","getBoundingClientRect","innerHeight","window","item","getItemProps","getLabelProps","getMenuProps","isOpen","highlightedIndex","getToggleButtonProps","inputValue","toggleProps","parsedSelectedItem","event","onClick","renderItems","length","map","index","parsedItem","key","value","className"],"sources":["/Users/kshitijijari/Downloads/Kaizntree Front-End Take Home Challenge/src/components/InputSelect/index.tsx"],"sourcesContent":["import React, { useCallback, useState, useRef } from \"react\";\nimport Downshift from \"downshift\";\nimport classNames from \"classnames\";\nimport { DropdownPosition, InputSelectOnChange, InputSelectProps } from \"./types\";\n\nexport function InputSelect<TItem>({\n  label,\n  defaultValue,\n  onChange: consumerOnChange,\n  items,\n  parseItem,\n  isLoading,\n  loadingLabel,\n}: InputSelectProps<TItem>) {\n  const [selectedValue, setSelectedValue] = useState<TItem | null>(defaultValue ?? null);\n  const [dropdownPosition, setDropdownPosition] = useState<DropdownPosition>({ top: 0, left: 0 });\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  const onChange = useCallback<InputSelectOnChange<TItem>>(\n    (selectedItem) => {\n      if (selectedItem === null) {\n        return;\n      }\n\n      consumerOnChange(selectedItem);\n      setSelectedValue(selectedItem);\n    },\n    [consumerOnChange]\n  );\n\n  const calculateDropdownPosition = () => {\n    if (menuRef.current) {\n      const { top, bottom, left } = menuRef.current.getBoundingClientRect();\n      const { innerHeight } = window;\n\n      // Check if menu is below the viewport\n      if (bottom > innerHeight) {\n        setDropdownPosition({ top: innerHeight - (bottom - top), left });\n      } else {\n        setDropdownPosition({ top, left });\n      }\n    }\n  };\n\n  return (\n    <Downshift<TItem>\n      id=\"KaizntreeSelect\"\n      onChange={onChange}\n      selectedItem={selectedValue}\n      itemToString={(item) => (item ? parseItem(item).label : \"\")}\n    >\n      {({\n        getItemProps,\n        getLabelProps,\n        getMenuProps,\n        isOpen,\n        highlightedIndex,\n        selectedItem,\n        getToggleButtonProps,\n        inputValue,\n      }) => {\n        const toggleProps = getToggleButtonProps();\n        const parsedSelectedItem = selectedItem === null ? null : parseItem(selectedItem);\n\n        return (\n          <div className=\"KaizntreeInputSelect--root\">\n            <label className=\"KaizntreeText--s KaizntreeText--hushed\" {...getLabelProps()}>\n              {label}\n            </label>\n            <div className=\"KaizntreeBreak--xs\" />\n            <div\n              className=\"KaizntreeInputSelect--input\"\n              onClick={(event) => {\n                calculateDropdownPosition();\n                toggleProps.onClick(event);\n              }}\n            >\n              {inputValue}\n            </div>\n\n            <div\n              ref={menuRef}\n              className={classNames(\"KaizntreeInputSelect--dropdown-container\", {\n                \"KaizntreeInputSelect--dropdown-container-opened\": isOpen,\n              })}\n              {...getMenuProps()}\n              style={{ top: dropdownPosition.top, left: dropdownPosition.left }}\n            >\n              {renderItems()}\n            </div>\n          </div>\n        );\n\n        function renderItems() {\n          if (!isOpen) {\n            return null;\n          }\n\n          if (isLoading) {\n            return <div className=\"KaizntreeInputSelect--dropdown-item\">{loadingLabel}...</div>;\n          }\n\n          if (items.length === 0) {\n            return <div className=\"KaizntreeInputSelect--dropdown-item\">No items</div>;\n          }\n\n          return items.map((item, index) => {\n            const parsedItem = parseItem(item);\n            return (\n              <div\n                key={parsedItem.value}\n                {...getItemProps({\n                  key: parsedItem.value,\n                  index,\n                  item,\n                  className: classNames(\"KaizntreeInputSelect--dropdown-item\", {\n                    \"KaizntreeInputSelect--dropdown-item-highlighted\": highlightedIndex === index,\n                    \"KaizntreeInputSelect--dropdown-item-selected\":\n                      parsedSelectedItem?.value === parsedItem.value,\n                  }),\n                })}\n              >\n                {parsedItem.label}\n              </div>\n            );\n          });\n        }\n      }}\n    </Downshift>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}