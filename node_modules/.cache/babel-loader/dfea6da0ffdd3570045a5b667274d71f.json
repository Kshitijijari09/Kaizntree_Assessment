{"ast":null,"code":"var _jsxFileName = \"/Users/kshitijijari/Downloads/Kaizntree Front-End Take Home Challenge/src/components/InputCheckbox/index.tsx\",\n    _s = $RefreshSig$();\n\nimport classNames from \"classnames\";\nimport { useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const InputCheckbox = _ref => {\n  _s();\n\n  let {\n    id,\n    checked = false,\n    disabled,\n    onChange\n  } = _ref;\n  const {\n    current: inputId\n  } = useRef(`KaizntreeInputCheckbox-${id}`);\n  const [isChecked, setIsChecked] = useState(false);\n\n  const handleCheckboxChange = () => {\n    // Call the onChange prop with the opposite value of checked\n    setIsChecked(!isChecked);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"KaizntreeInputCheckbox--container\",\n    \"data-testid\": inputId,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: classNames(\"KaizntreeInputCheckbox--label\", {\n        \"KaizntreeInputCheckbox--label-checked\": checked,\n        \"KaizntreeInputCheckbox--label-disabled\": disabled\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: inputId,\n      type: \"checkbox\",\n      className: \"KaizntreeInputCheckbox--input\",\n      checked: ischecked,\n      disabled: disabled,\n      onChange: handleCheckboxChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InputCheckbox, \"iidX3qHvihCtb7wsNwpoDPdK0hU=\");\n\n_c = InputCheckbox;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputCheckbox\");","map":{"version":3,"names":["classNames","useRef","useState","InputCheckbox","id","checked","disabled","onChange","current","inputId","isChecked","setIsChecked","handleCheckboxChange","ischecked"],"sources":["/Users/kshitijijari/Downloads/Kaizntree Front-End Take Home Challenge/src/components/InputCheckbox/index.tsx"],"sourcesContent":["import classNames from \"classnames\"\nimport { useRef,useState } from \"react\"\nimport { InputCheckboxComponent } from \"./types\"\n\nexport const InputCheckbox: InputCheckboxComponent = ({ id, checked = false, disabled, onChange }) => {\n  const { current: inputId } = useRef(`KaizntreeInputCheckbox-${id}`)\n  const [isChecked, setIsChecked] = useState(false);\n  const handleCheckboxChange = () => {\n      // Call the onChange prop with the opposite value of checked\n      setIsChecked(!isChecked);\n  }\n\n  return (\n    <div className=\"KaizntreeInputCheckbox--container\" data-testid={inputId}>\n      <label\n        className={classNames(\"KaizntreeInputCheckbox--label\", {\n          \"KaizntreeInputCheckbox--label-checked\": checked,\n          \"KaizntreeInputCheckbox--label-disabled\": disabled,\n        })}\n      />\n      <input\n        id={inputId}  \n        type=\"checkbox\"\n        className=\"KaizntreeInputCheckbox--input\"\n        checked={ischecked}\n        disabled={disabled}\n        onChange={handleCheckboxChange}\n      />\n    </div>\n  )\n}\n"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,SAASC,MAAT,EAAgBC,QAAhB,QAAgC,OAAhC;;AAGA,OAAO,MAAMC,aAAqC,GAAG,QAAiD;EAAA;;EAAA,IAAhD;IAAEC,EAAF;IAAMC,OAAO,GAAG,KAAhB;IAAuBC,QAAvB;IAAiCC;EAAjC,CAAgD;EACpG,MAAM;IAAEC,OAAO,EAAEC;EAAX,IAAuBR,MAAM,CAAE,0BAAyBG,EAAG,EAA9B,CAAnC;EACA,MAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAA1C;;EACA,MAAMU,oBAAoB,GAAG,MAAM;IAC/B;IACAD,YAAY,CAAC,CAACD,SAAF,CAAZ;EACH,CAHD;;EAKA,oBACE;IAAK,SAAS,EAAC,mCAAf;IAAmD,eAAaD,OAAhE;IAAA,wBACE;MACE,SAAS,EAAET,UAAU,CAAC,+BAAD,EAAkC;QACrD,yCAAyCK,OADY;QAErD,0CAA0CC;MAFW,CAAlC;IADvB;MAAA;MAAA;MAAA;IAAA,QADF,eAOE;MACE,EAAE,EAAEG,OADN;MAEE,IAAI,EAAC,UAFP;MAGE,SAAS,EAAC,+BAHZ;MAIE,OAAO,EAAEI,SAJX;MAKE,QAAQ,EAAEP,QALZ;MAME,QAAQ,EAAEM;IANZ;MAAA;MAAA;MAAA;IAAA,QAPF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAkBD,CA1BM;;GAAMT,a;;KAAAA,a"},"metadata":{},"sourceType":"module"}